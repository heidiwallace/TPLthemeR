axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
warnings()
install_font()
install_font <- function(){
sysfonts::font_add_google("Dongle", "Dongle")
}
install_font()
install_font <- function(){
sysfonts::font_add_google("Rubik Beastly", "Rubik")
}
install_font()
sysfonts::font_add_google("Rubik Beastly", "Rubik")
install_font <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
}
install_font()
theme_tpl <- function(){
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing")
theme_tpl <- function(){
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
showtext::showtext_auto(enable = F)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
theme_tpl <- function(){
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
#showtext::showtext_auto(enable = F)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
showtext_auto(enable = F)
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing")
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme(text = element_text(family = "Open Sans"),
title = element_text(face = "bold"))
showtext_auto(enable = T)
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme(text = element_text(family = "Open Sans"),
title = element_text(face = "bold"))
#library(showtext)
library(ggplot2)
library(tidyverse)
library(TPLthemeR)
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
theme_tpl <- function(){
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
warnings
warnings()
install_font()
install_font <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans")
}
install_font()
install_font <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
}
install_font()
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
#library(showtext)
library(ggplot2)
library(tidyverse)
install_font <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
}
theme_tpl <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing")
#library(showtext)
library(ggplot2)
library(tidyverse)
install_font <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
}
theme_tpl <- function(){
#sysfonts::font_add_google("Oswald", "Oswald")
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
theme_tpl <- function(){
sysfonts::font_add_google("Oswald", "Oswald")
showtext::showtext_auto()
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
ggplot(diamonds,aes(color, price)) +
geom_col() +
labs(title = "testing testing") +
theme_tpl()
#create a vector of color hex codes
colors <- tpl_colors()
diamonds %>%
ggplot(aes(cut, price, fill = clarity)) +
geom_col() +
labs(title = "Prices of diamonds by cut",
caption = "Here is a sample caption")
diamonds %>%
ggplot(aes(cut, price, fill = color)) +
geom_col() +
labs(title = "Prices of diamonds by cut",
caption = "Here is a sample caption")
#load the packages
library(TPLthemeR)
theme_tpl <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans") #add the font from the web
showtext::showtext_auto() #tell R to use showtext to display fonts
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
diamonds %>%
ggplot(aes(cut, price, fill = color)) +
geom_col() +
labs(title = "Prices of diamonds by cut",
caption = "Here is a sample caption") +
scale_fill_discrete_tpl()
length(unique(diamonds$color))
diamonds %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by cut",
caption = "Here is a sample caption") +
scale_fill_discrete_tpl()
diamonds %>%
ggplot(aes(color, mean(price), fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
scale_fill_discrete_tpl()
mean(diamonds$price)
diamonds %>%
ggplot(aes(color, mean(price), fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
scale_fill_discrete_tpl()
diamonds %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
scale_fill_discrete_tpl()
View(diamonds)
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl()
theme_tpl <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans") #add the font from the web
showtext::showtext_auto() #tell R to use showtext to display fonts
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl() +
scale_fill_discrete_tpl()
theme_tpl <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans") #add the font from the web
showtext::showtext_auto() #tell R to use showtext to display fonts
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Oswald", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30")
)
}
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl() +
scale_fill_discrete_tpl()
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price))
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl_legend_right() +
scale_fill_discrete_tpl()
theme_tpl_legend_right <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans") #add the font from the web
showtext::showtext_auto() #tell R to use showtext to display fonts
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Open Sans", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30"),
#legend elements
legend.title = ggplot2::element_text(size = 12, color = "gray30"),
legend.text = ggplot2::element_text(size = 12, color = "gray30")
)
}
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col() +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl_legend_right() +
scale_fill_discrete_tpl()
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col(position = "dodge") +
labs(title = "Prices of diamonds by color",
caption = "Here is a sample caption") +
theme_tpl_legend_right() +
scale_fill_discrete_tpl()
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col(position = "dodge") +
labs(title = "Prices of diamonds by color and cut",
caption = "Here is a sample caption") +
theme_tpl_legend_right() +
scale_fill_discrete_tpl()
#create a vector of color hex codes
colors <- tpl_colors()
colors[['darkblue']]
#a plot with top legend
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col(position = "dodge") +
labs(title = "Prices of diamonds by color and cut",
caption = "Here is a sample caption") +
theme_tpl_legend_top() +
scale_fill_discrete_tpl()
theme_tpl_legend_top <- function(){
sysfonts::font_add_google("Open Sans", "Open Sans") #add the font from the web
showtext::showtext_auto() #tell R to use showtext to display fonts
ggplot2::theme_classic() %+replace% #modifying the built-in ggplot theme
ggplot2::theme(
#text elements
text = ggplot2::element_text(family = "Open Sans", face = "plain"),
plot.title = ggplot2::element_text(size = 18, color = "gray30", hjust = 0, vjust = 0),
plot.subtitle = ggplot2::element_text(size = 14, color = "gray30", hjust = 0, vjust = 0),
axis.text = ggplot2::element_text(size = 16, color = "gray30"),
axis.title = ggplot2::element_text(size = 16, color = "gray30"),
strip.text = ggplot2::element_text(size = 14, color = "gray30"),
#ticks and grid elements
axis.ticks = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_blank(),
axis.line.y.left = ggplot2::element_blank(),
axis.line.x.bottom = ggplot2::element_line(color = "gray"),
#caption elements
plot.caption = ggplot2::element_text(hjust = 0, size = 12, color = "gray30"),
#legend elements
legend.position = "top",
legend.justification = "left",
legend.title = ggplot2::element_blank(),
legend.direction = "horizontal",
legend.text = ggplot2::element_text(size = 12, color = "gray30")
)
}
#a plot with top legend
diamonds %>%
group_by(color, cut) %>%
summarise(price = mean(price)) %>%
ggplot(aes(color, price, fill = cut)) +
geom_col(position = "dodge") +
labs(title = "Prices of diamonds by color and cut",
caption = "Here is a sample caption") +
theme_tpl_legend_top() +
scale_fill_discrete_tpl()
ggsave("test.png")
devtools::install_github("heidiwallace/TPLthemeR") #install the package to your R library
warnings()
